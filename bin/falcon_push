#!/opt/mydan/perl/bin/perl
use strict;
use warnings;

use AnyEvent;
use Sys::Hostname;
use MYDan::Util::OptConf;

=head1 SYNOPSIS

 $0 [--metric $metric ] [--tags tags1=x1,tags2=x2 ] [--debug]
 
=cut

my $option = MYDan::Util::OptConf->load();
my %o = $option->set( tags => "from=log2falcon"  )->get( qw( metric=s  tags=s debug ) )->dump();
$option->assert( 'metric' );

$0 = "log2falcon_falcon_push_$ENV{UUID}" if $ENV{UUID};

my $done = AnyEvent->condvar;

my $w; $w = AnyEvent->io (fh => \*STDIN, poll => 'r', cb => sub {
   my $input = <STDIN>;
   unless( defined $input ){ $done->send; return; }

   chomp $input;
   warn "read: $input\n" if $o{debug};

   return unless $input =~ /^([a-zA-Z0-9\._\-]+):(\d+)$/;

   my ( $timestamp, $endpoint ) = ( time, hostname() );

   my ( $tags, $val ) = ( "$o{tags},keyword=$1", $2 );
   my $cmd = "curl -X POST -d \"[{\\\"metric\\\": \\\"$o{metric}\\\", \\\"endpoint\\\": \\\"$endpoint\\\", \\\"timestamp\\\": $timestamp,\\\"step\\\": 60,\\\"value\\\": $val,\\\"counterType\\\": \\\"GAUGE\\\",\\\"tags\\\": \\\"$tags\\\"}]\" http://127.0.0.1:1988/v1/push";

   $o{debug} ? warn( "$cmd\n" ) : system $cmd;
});

$done->recv;
